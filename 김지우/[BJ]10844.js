const fs = require('fs');
const filePath =
  process.platform === 'linux' ? '/dev/stdin' : __dirname + '/input.txt';
let input = fs.readFileSync(filePath).toString();

const N = +input;
// 계단수란 인접한 모든 자리수의 차이가 1이 나는 수

// 1. 1자리수는 모두 계단수 dp[1][i] = 1
// 2. 2자리수는 10, 12, 21, 23, 32, 34, ~ 87, 89, 98
// 앞의 수가 0이면 뒤의 수는 1만 가능
// 앞의 수가 9이면 뒤의 수는 8만 가능

// 3. 3자리수는 101, 121, 123, 210, 212, 232, 234, 321, 323, 343, 345, 432 ~
// 210 / 101 121 321 / 123 323 343 543 / 432 434 632 654

// 즉 dp[1] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
//   dp[2] = [1, 1, 2, 2, 2, 2, 2, 2, 2, 1]
//   dp[3] = [1, 3, 3, 4, 4, 4, 4, 4, 3, 2]
// 사실 아직도 이거 보고 점화식 만들라고 하면 못할 듯
// 이게 왜 실버 1이냐 미친놈들아

const dp = Array.from(Array(101), () => Array(10).fill(0));

dp[1] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1];
dp[2] = [1, 1, 2, 2, 2, 2, 2, 2, 2, 1];

for (let i = 3; i <= N; i++) {
  for (let j = 0; j <= 9; j++) {
    if (j === 0) {
      dp[i][j] = dp[i - 1][j + 1] % 1000000000;
    } else if (j === 9) {
      dp[i][j] = dp[i - 1][j - 1] % 1000000000;
    } else {
      dp[i][j] = (dp[i - 1][j - 1] + dp[i - 1][j + 1]) % 1000000000;
    }
  }
}
let ans = 0;
for (let i = 0; i <= 9; i++) {
  ans += dp[N][i];
}
console.log(ans % 1000000000);
